name: generate-tsl-matrix
run-name: Generate the Template SIMD Library

on:
  workflow_run:
    workflows: [create-generation-image]
    types:
      - completed

jobs:
  generate-for-intel:
    runs-on: ubuntu-latest
    name: Job to generate TSL for Intel x86
    strategy:
      matrix:
        target_flags:
          - "sse"
          - "sse,sse2"
          - "sse,sse2,ssse3"
          - "sse,sse2,ssse3,sse4_1"
          - "sse,sse2,ssse3,sse4_1,sse4_2"
          - "sse,sse2,ssse3,sse4_1,sse4_2,avx"
          - "sse,sse2,ssse3,sse4_1,sse4_2,avx,avx2"
          - "sse,sse2,ssse3,sse4_1,sse4_2,avx,avx2,avx512f"
          - "sse,sse2,ssse3,sse4_1,sse4_2,avx,avx2,avx512f,avx512cd,avx512er,avx512pf" #avx3.1
          - "sse,sse2,ssse3,sse4_1,sse4_2,avx,avx2,avx512f,avx512cd,avx512bw,avx512dq,avx512vl" #avx3.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: TSL Generate
        id: generate
        uses: ./.github/actions/tsl-generate
        with:
          image: ${{ vars.GENERATION_TAG }}
          targets: ${{ matrix.target_flags }}
      - name: TSL Generate Output
        if: always()
        run: echo "TSL Generation ${{ steps.generate.outputs.msg }}"
      - if: ${{ steps.generate.outputs.success == 'false' }}
        run: "echo SUCCESS == false"
      - if: ${{ steps.generate.outputs.success == 'true' }}
        run: "echo SUCCESS == true"
      - name: Upload Generated TSL
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tmp_tsl_intel_${{ steps.generate.outputs.name }}
          path: ${{ github.workspace }}/${{ steps.generate.outputs.out }}
          overwrite: true
          retention-days: 1
      - if: ${{ steps.generate.outputs.success == 'false' }}
        uses: actions/github-script@v7
        with:
          script: |
            echo "${{ steps.generate.outputs.msg }}"
            core.setFailed("Generation for Intel x86 failed")
  package-for-intel:
    runs-on: ubuntu-latest
    name: Job to package TSL for Intel x86
    needs: generate-for-intel
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Generated TSL
        uses: actions/download-artifact@v4
        with:
          pattern: tmp_tsl_intel_*
          path: ${{ github.workspace }}/tsl_intel
      - name: Upload Packaged TSL
        uses: actions/upload-artifact@v4
        with:
          name: TSL_INTEL
          path: ${{ github.workspace }}/tsl_intel
          overwrite: true

  generate-for-arm:
    runs-on: ubuntu-latest
    name: Job to generate TSL for ARM
    strategy:
      matrix:
        target_flags:
          - "neon"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: TSL Generate
        id: generate
        uses: ./.github/actions/tsl-generate
        with:
          image: ${{ vars.GENERATION_TAG }}
          targets: ${{ matrix.target_flags }}
      - name: TSL Generate Output
        if: always()
        run: echo "TSL Generation ${{ steps.generate.outputs.msg }}"
      - if: ${{ steps.generate.outputs.success == 'false' }}
        run: "echo SUCCESS == false"
      - if: ${{ steps.generate.outputs.success == 'true' }}
        run: "echo SUCCESS == true"
      - name: Upload Generated TSL
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tmp_tsl_arm_${{ steps.generate.outputs.name }}
          path: ${{ github.workspace }}/${{ steps.generate.outputs.out }}
          overwrite: true
          retention-days: 1
      - if: ${{ steps.generate.outputs.success == 'false' }}
        uses: actions/github-script@v7
        with:
          script: |
            echo "${{ steps.generate.outputs.msg }}"
            core.setFailed("Generation for ARM failed")
  package-for-arm:
    runs-on: ubuntu-latest
    name: Job to package TSL for ARM
    needs: generate-for-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Generated TSL
        uses: actions/download-artifact@v4
        with:
          pattern: tmp_tsl_arm_*
          path: ${{ github.workspace }}/tsl_arm
      - name: Upload Packaged TSL
        uses: actions/upload-artifact@v4
        with:
          name: TSL_ARM
          path: ${{ github.workspace }}/tsl_arm
          overwrite: true
